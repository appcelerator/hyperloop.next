/**
 * HYPERLOOP GENERATED - DO NOT MODIFY
 *
 * This source code is Copyright (c) <%= new Date().getFullYear() %> by Appcelerator, Inc.
 * All Rights Reserved.  This code contains patents and/or patents pending.
 */
var $dispatch = Hyperloop.dispatch,
	$init,
	$imports,
	$class;

<% if (data.superclass && data.superclass.framework && data.superclass.name) { %>
var <%= data.superclass.name %> = require('/hyperloop/<%= data.superclass.framework.toLowerCase() %>/<%= data.superclass.name.toLowerCase() %>');
<% } %>

/**
 * <%= data.framework%>/<%= data.filename %>
 * @class
 */
function <%= data.class.name %> (pointer) {
	if (!(this instanceof <%= data.class.name %>)) {
		throw new TypeError('Cannot instantiate a class by calling it as a function');
	}

	if (!$init) {
		$initialize();
	}

	if (pointer) {
		var oldWrapper = Hyperloop.getWrapper(pointer.$native ? pointer.$native : pointer);
		if (oldWrapper) {
			if (oldWrapper.__proto__ !== this.__proto__) {
				oldWrapper = Object.setPrototypeOf(oldWrapper, this.__proto__);
			}
			return oldWrapper;
		}
	}

	if (!pointer) {
		pointer = Hyperloop.createProxy({
			class: '<%= data.class.mangledName || data.class.name %>',
			alloc: true,
			init: 'init'
		});
	}
<% if (data.superclass) { -%>
	<%=data.superclass.name%>.call(this, pointer);
<% } else { -%>
	if (pointer.$native) {
		this.$native = pointer.$native;
	} else {
		this.$native = pointer;
	}
	Hyperloop.registerWrapper(this);
<% } -%>
	Object.defineProperty(this, '$private', {
		value: {},
		writable: true,
		enumerable: false,
		configurable: false
	});
}
<% if (data.superclass) { -%>
// superclass
<%= data.class.name %>.prototype = Object.create(<%= data.superclass.name %>.prototype, {
	constructor: {
		value: <%= data.class.name %>,
		enumerable: false,
		writable: true,
		configurable: true
	}
});
Object.setPrototypeOf(<%= data.class.name %>, <%= data.superclass.name %>);
<% } -%>

Object.defineProperty(<%= data.class.name %>, '$class', {
	get: function () {
		if (!$init) { $initialize(); }
		return $class;
	},
	enumerable: false
});

<% if (data.state && data.state.isFunctionReferenced('className')) { -%>
Object.defineProperty(<%= data.class.name %>, 'className', {
	value: '<%= data.class.name %>',
	enumerable: false,
	writable: true
});

Object.defineProperty(<%= data.class.name %>.prototype, 'className', {
	value: '<%= data.class.name %>',
	enumerable: false,
	writable: true
});
<% } -%>

Object.defineProperty(<%= data.class.name %>.prototype, 'toString', {
	value: function () {
		return Hyperloop.stringValue(this.$native);
	},
	enumerable: false,
	writable: true
});

<% if (data.state && data.state.isFunctionReferenced('cast')) { -%>
Object.defineProperty(<%= data.class.name %>, 'cast', {
	value: function (instance) {
		return new <%= data.class.name %>(instance);
	},
	writable: true,
	enumerable: false,
	configurable: false
});
<% } -%>

Object.defineProperty(<%= data.class.name %>, 'toString', {
	value: function () {
		return '[class <%= data.class.name %>]';
	},
	enumerable: false,
	writable: true
});

<% if (data.class.class_properties.length) { -%>
// class properties
Object.defineProperties(<%= data.class.name %>, {
<% data.class.class_properties.forEach(function (p, index) { -%>
	<%=p.name%>: {
	<% if (p.getter) { -%><%- p.getter %>,<% } %>
	<% if (p.setter) { -%><%- p.setter %>,<% } %>
		enumerable: false
	}<%=index + 1 < data.class.class_properties.length ? ',':''%>
<% }) -%>
});
<% } -%>

<% if (data.class.class_methods.length) { -%>
// class methods
<% data.class.class_methods.forEach(function (m) { %>
<%- m %>
<% }) %>
<% } -%>

function $initialize () {
	$imports = {};
<%- data.renderedImports %>

	$class = Hyperloop.createProxy({
		class: '<%= data.class.mangledName || data.class.name %>',
		alloc: false,
		init: 'class'
	});
	Object.defineProperty(<%= data.class.name %>, '$imports', {
		value: $imports,
		writable: true,
		enumerable: false,
		configurable: false
	});
	Object.defineProperty(<%= data.class.name %>, '$private', {
		value: {},
		writable: true,
		enumerable: false,
		configurable: false
	});

<% if (data.class.instance_methods.length) { -%>
	// instance methods
<% data.class.instance_methods.forEach(function (m) { %>
<%- m %>
<% }) %>
<% } -%>

<% if (data.class.instance_properties.length) { -%>
	// instance properties
	Object.defineProperties(<%= data.class.name %>.prototype, {
<% data.class.instance_properties.forEach(function (p, index) { -%>
		<%=p.name%>: {
		<% if (p.getter) { -%><%- p.getter %>,<% } %>
		<% if (p.setter) { -%><%- p.setter %>,<% } %>
			enumerable: false
		}<%=index + 1 < data.class.instance_properties.length ? ',':''%>
<% }) -%>
	});
<% } -%>

	$init = true;
}

/**
 * ticore compatibility with ES6
 */
Object.setPrototypeOf = Object.setPrototypeOf || function(obj, proto) {
	obj.__proto__ = proto;
	return obj;
}

module.exports = <%= data.class.name %>;
