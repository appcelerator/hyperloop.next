name: Android Build
on: 
  push:
    paths-ignore:
    - 'ios/**'
    - 'apidoc/**'
  pull_request:
    paths-ignore:
    - 'ios/**'
    - 'apidoc/**'
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest
    name: Android
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      USE_CCACHE: 1
    steps:
    - uses: actions/checkout@v2

    - name: Retrieve package version
      run: |
        PACKAGE_VERSION=$(sed -n 's/^ *"version": *"//p' package.json | tr -d '"' | tr -d ',' | tr -d '[[:space:]]')
        echo "packageVersion=${PACKAGE_VERSION}" >> $GITHUB_ENV

    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - run: npm i -g titanium
      name: Install Titanium CLI

# TODO: Cache sdk install
    - run: ti sdk install 9.3.2.GA --force
      name: Install SDK 9.3.2.GA

    - name: Install ccache
      run: brew install ccache

    - name: Retrieve ccache
      uses: actions/cache@v2
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-ccache-

    - name: Build and Test Hook
      working-directory: ./android/hooks
      run: |
        sed -i.bak 's/0.0.0-PLACEHOLDER/${{ env.packageVersion }}/g' ./package.json
        rm -rf package.json.bak
        npm ci
        npm test
        rm -rf node_modules
        rm -rf coverage
        rm -f junit_report.xml
        rm -rf test
        npm ci --production
        rm -f package-lock.json

    - name: Build Module
      working-directory: ./android
      run: |
        sed -i.bak 's/VERSION/${{ env.packageVersion }}/g' ./manifest
        rm -rf ../example
        rm -rf ../documentation
        ti build -p android --build-only

    - name: Show summary of ccache configuration and statistics counters
      run: ccache --show-stats

# FIXME: delete teh folders before building so we don't need to unzip/zip again
    # - name: Prepare distribution
    #   working-directory: ./android/dist
    #   run: |
    #     rm -f hyperloop-android.jar
    #     unzip hyperloop-android-${{ env.packageVersion }}.zip
    #     rm -rf hyperloop-android-${{ env.packageVersion }}.zip
    #     rm -rf modules/android/hyperloop/${{ env.packageVersion }}/example
    #     rm -rf modules/android/hyperloop/${{ env.packageVersion }}/documentation
    #     zip -r hyperloop-android-${{ env.packageVersion }}.zip .

    - name: Archive Android zip
      uses: actions/upload-artifact@v2
      with:
        name: hyperloop-android-${{ env.packageVersion }}
        path: |
          android/dist/hyperloop-android-*.zip

    - name: Cleanup Gradle Cache
      # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
      # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties
